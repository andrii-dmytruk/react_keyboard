{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyboardEvent","event","setState","code","key","document","addEventListener","this","removeEventListener","className","length","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZH,WAA2B,UAAfE,EAAME,KACd,QACAF,EAAMG,OAjBhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,uBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,uBAV/C,oBAqBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIV,EAAWW,OAAX,mCACgCX,EADhC,KAEI,kCA9BhB,GAAyBY,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.2ad2e7d5.chunk.js","sourcesContent":["/* eslint-disable no-restricted-globals */\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyboardEvent);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyboardEvent);\n  }\n\n  handleKeyboardEvent = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.code === 'Space'\n        ? 'space'\n        : event.key,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            pressedKey.length\n              ? `The last pressed key is [${pressedKey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}